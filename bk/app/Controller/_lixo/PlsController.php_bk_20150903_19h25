<?
CakePlugin::load('MeioUpload');
App::uses('Sanitize', 'Utility');
class PlsController extends AppController{
 	var $name = "Pls";
	public $helpers = array('Html', 'Session', 'Form', 'Time', 'Js');
	public $uses = array('Pl', 'Foco', 'OqueE', 'OndeEsta', 'NossaPosicao', 'StatusType');
	var $scaffold = 'admin';
	// var $transformUrl = array('url_amigavel' => 'numero_da_pl');

	var $paginate = array(
	                        'limit'  => 10,
                            'order' => array(
                                'id' => 'DESC'
                            )
                        );

    //// Nescessário ter o beforeFilter
	function beforeFilter() {
		parent::beforeFilter();


		/// Descomentar verificação abaixo apenas quando utilizar Scaffold
		/*
		if (isset($this->params['prefix']) && $this->params['prefix'] == 'admin') {
			$showThisFields	=	array(
                                    'campo'	  	=> 'Nome do Campo',
                                    ...
                                 );
			$showImage	=	array(
								''
							);

			$this->set('showFields', $showThisFields);
			$this->set('fieldToImg', $showImage);


			$this->set('schemaTable', $this->NomeDaModel->schema());
		}
		*/
	}


    public function admin_add(){
        $model = 'Pl';
		$this->set('model', $model);
        $nossaPosicao = $this->StatusType->find('list', array(
            'fields' => array(
                'id',
                'status_name'
            )
        ));
        $this->set('nossaPosicao', $nossaPosicao);

        $result = $this->$model->find('all', array(
            'fields' => array(
                'autor', 'relator'
            )
        ));
        $this->set('registros', $result);

		/// Verifica se houve post para salvar as informações
		if ($this->request->is('post')){

			/// Seta a model com as informações que vieram do post
			$this->$model->set($this->request->data);

			/// Verifica se a Model está válida.
			/// OBS.: caso estejamos utilizando algum validate da Model, o Cake irá printar o que há de errado no ELSE deste script
			if($this->$model->validates()){
                // print_r($this->request->data);
                // die();

				/// Gravando dados na Model Pai
                $pl_salva = $this->$model->save($this->request->data);
	            if (!empty($pl_salva)){
                    /// Recuperando último ID da Model principal
                    $novo_id = $this->$model->getLastInsertId();

                    /// Array com o nome das outras Models Relacionadas
                    $a_models = array("Foco", "OqueE", "OndeEsta", "NossaPosicao");
                    foreach ($a_models as $model_r) {

                        /// Setando o ID da Model Principal para criar o relacionamento
                        $this->request->data[$model_r]['pl_id'] = $novo_id;
                        /////*********************///////
                        ///====>>> setar campo da imagem aqui
                        /////*********************///////

                        /// Salvando a Model Relacionada com o ID da Principal
                        $this->$model->$model_r->save($this->request->data);
                    }
                }


				// Inserindo um alerta de sucesso na sessão ativa para ser mostrado ao usuário
	            $this->Session->setFlash('PL adicionada com sucesso!');

            	// Redirecionando o usuário para a listagem dos registros
                $this->redirect(array('controller' => 'index', 'action' => 'index', 'admin' => true));

            } else {

				/// Listando os erros que a Model está informando.
				$erros = $this->$model->validationErrors;
				$mensagem_erros = '';
				foreach ($erros as $erro):
					$index_name = key($erro);
					$mensagem_erros .= '&bull; ' . $erro[$index_name] . '</br>';
				endforeach;

				 /// Colocando os erros na sessão ativa para ser mostrado ao usuário
				$this->Session->setFlash($mensagem_erros, 'default', array('class' => 'alert'));

			}
        }
    }

    public function admin_ver_completo($id=null){
        $model = 'Pl';
        $this->set('model', $model);

        /// Array com o nome das outras Models Relacionadas
        $a_models = array("Pl", "Foco", "OqueE", "OndeEsta", "NossaPosicao");

        // $this->set('medidas_imagens', $this->OndeEsta->type_files);
        // $this->set('medidas_imagens', $this->NossaPosicao->type_files);

    	/// Verifica se esse ID existe ou não
		$this->$model->id = $id;
        if (!$this->$model->exists()) {
            throw new NotFoundException(__('Registro inexistente'));
        }


        if ($this->request->is('post') || $this->request->is('put')){
			/// Seta a model com as informações que vieram do post
			$this->$model->set($this->request->data);

			/// Verifica se a Model está válida.
			/// OBS.: caso estejamos utilizando algum validate da Model, o Cake irá printar o que há de errado no ELSE deste script
			if($this->$model->validates()):
                foreach ($a_models as $model_r) {
                    if(!empty($this->request->data[$model_r])):
                        // print_r($this->request->data);
                        // die();
                        /// Setando o ID da Model Principal para criar o relacionamento
                        $this->request->data[$model_r]['pl_id'] = $id;
                        if(!empty($this->request->data[$model_r]['txt'])){
                            $this->request->data[$model_r]['txt'] = $this->request->data[$model_r]['txt'];
                        }
                        if(!empty($this->request->data[$model_r]['arquivo'])){
                            $this->request->data[$model_r]['arquivo'] = $this->request->data[$model_r]['arquivo'];
                        }
                        $this->request->data[$model_r]['created'] = date("Y-m-d H:i:s");
                        $this->request->data[$model_r]['modified'] = date("Y-m-d H:i:s");

                        /// Salvando a Model Relacionada com o ID da Principal
                        if($model_r == 'Pl'){
                            $this->$model_r->save($this->request->data);
                        }else{
                            $this->$model->$model_r->save($this->request->data);
                        }
                    endif;
                }
                // die();

                // $this->redirect(array('action' => 'ver_completo', 'admin' => true, $id));

            endif;
        }
        $this->request->data = $this->$model->read(null, $id);

    }

    public function admin_ver_completo_edit_block($pl_id=null, $nameModel=null, $id=null){
        $model = $nameModel;
        $this->autoRender = false;
    	/// Verifica se esse ID existe ou não
        if( ($nameModel == 'Foco') || ($nameModel == 'OqueE') ){
		    $this->$model->id = $id;
            $limit = 1;
            // $conditions = array('limit' => 1);
        }else{
            $this->request->data[$model]['pl_id'] = $pl_id;
            $limit = 5;
        }
        // if (!$this->$model->exists()) {
        //     throw new NotFoundException(__('Registro inexistente'));
        // }


        if ($this->request->is('post') || $this->request->is('put')){
			/// Seta a model com as informações que vieram do post
			$this->$model->set($this->request->data);

			if($this->$model->validates()):
                if(!empty($this->request->data[$model]['arquivo'])){
                    $this->request->data[$model]['arquivo'] = 'uploads/arquivos_PLs/'.$this->request->data[$model]['arquivo'];
                }
                if($this->$model->save($this->request->data)){
                    if( ($nameModel == 'Foco') || ($nameModel == 'OqueE') ){
                        $lastIdInsert = $id;
                    }else{
                        // $lastIdInsert = $this->$model->getLastInsertID();
                    }

                    // $result = $this->$model->findById($lastIdInsert);
                    $result = $this->$model->find('all', array(
                        'fields' => array($model.'.id', $model.'.txt', $model.'.modified', $model.'.arquivo'),
                        'conditions' => array(
                            'pl_id' => $pl_id
                        ),
                        'limit' => $limit,
                        'order' => array('id' => 'DESC')
                    ));

                    // $this->autoRender = false;
                    return json_encode($result);
                    die();
                }else{
                    echo false;
                    die();
                }
            endif;
        }
        $this->request->data = $this->$model->read(null, $id);

    }

    public function admin_autocomplete(){
        $model = 'Pl';
        $result = $this->$model->find('all', array(
            'fields' => array(
                // 'DISTINCT (relator)',
                // 'autor',
                // 'relator'
                $model.'.autor', $model.'.relator'
            )
        ));

        $a_registros['Pl'] = array();
        foreach($result as $registro){
            array_push($a_registros['Pl'], array($registro['Pl']['autor']));
            array_push($a_registros['Pl'], array($registro['Pl']['relator']));
        }

        $uniqueRegistro = array_unique($a_registros);
        echo json_encode($uniqueRegistro);
    }
}
