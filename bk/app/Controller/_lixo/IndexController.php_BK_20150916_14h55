<?php

App::uses('AppController', 'Controller');

class IndexController extends AppController {
	public $name 	= 'Index';
	public $helpers = array('Html', 'Session', 'Paginator', 'Time', 'Text');
	public $uses 	= array('User', 'Pl', 'StatusType');

	public $paginate = array(
		'limit' => 20,
	);


	function beforeFilter() {
		parent::beforeFilter();
	}

	public function index() {

	}
	public function login() {
	    if ($this->request->is('post')) {
	        if ($this->Auth->login()) {
	            return $this->redirect($this->Auth->redirectUrl());
	        } else {
	            $this->Session->setFlash(
	                __('Username or password is incorrect'),
	                'default',
	                array(),
	                'auth'
	            );
	        }
	    }
	}


	///// ADMIN
	//////////////////////////////////////////////////////
	//////////////////////////////////////////////////////
	//////////////////////////////////////////////////////

	public function admin_index($documentos = null) {
		$model = 'Pl';
		$this->set('model', $model);
		$this->paginate = array(
			'conditions' => array(
				'Pl.ativo' => 1,
				'Pl.delete' => 0,
			),
			'limit' => 10,
			'order' => array(
				'Pl.id' => 'DESC'
			),
		);

		if ($this->request->is('post')) {

			if (!empty($this->request->data['Pl']['search'])) {
				$campo = trim($this->request->data['Pl']['search']);
				$this->set('busca', $campo);

				$sql_against = "";
				foreach (explode(" ", $campo) as $palavra) {
					if (strlen(trim($palavra)) > 0) {
						if (preg_match('/"/',$palavra)) {
							$palavra = str_replace('"', '', $palavra);
							$sql_against = $sql_against . ''. $palavra .' ';

						} else {
							$sql_against = $sql_against . ''. $palavra .'* ';

						}
					}
				}
				// $sql_against = $campo;
				$sql_against = rtrim($sql_against, ' ');
				// echo "<hr>";
				// print_r($sql_against);
				// die();

				$resultado_busca = $this->$model->query("
					SELECT DISTINCT
						Pl.id
					FROM
						tb_pls as Pl
						left join tb_o_que_e as OqueE on (OqueE.pl_id = Pl.id)
						left join tb_onde_esta as Situacao on (Situacao.pl_id = Pl.id)
						left join tb_nossa_posicao as NossaPosicao on (NossaPosicao.pl_id = Pl.id)
						left join tb_foco as Foco on (Foco.pl_id = Pl.id)

					WHERE
						Pl.ativo = 1
						AND (
							MATCH(Pl.numero_da_pl, Pl.autor, Pl.relator) AGAINST ('". $sql_against ."' IN BOOLEAN MODE)
							OR MATCH(OqueE.txt, OqueE.arquivo) AGAINST ('". $sql_against ."' IN BOOLEAN MODE)
							OR MATCH(Situacao.txt, Situacao.arquivo) AGAINST ('". $sql_against ."' IN BOOLEAN MODE)
							OR MATCH(NossaPosicao.txt, NossaPosicao.arquivo) AGAINST ('". $sql_against ."' IN BOOLEAN MODE)
							OR MATCH(Foco.txt, Foco.arquivo) AGAINST ('". $sql_against ."' IN BOOLEAN MODE)
						)
				");
				// print_r($resultado_busca);
				// die('aqui');
				if (!empty($resultado_busca)) {

					$ids = '';
					foreach ($resultado_busca as $pl_id) {
						$ids = $ids . $pl_id['Pl']['id'] . ',';
					}
					$ids = rtrim($ids, ',');


					$this->paginate['conditions'] = array(
														'Pl.id in ('. $ids .')'
													);


					$pls = $this->paginate($model);
					$this->set('pls', $pls);
				}

			} else {
				$pls = $this->paginate($model);
				$this->set('pls', $pls);
			}


		} else {
			$pls = $this->paginate($model);
			$this->set('pls', $pls);

		}




	}

}
