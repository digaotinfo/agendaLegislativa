<?
CakePlugin::load('MeioUpload');
App::uses('CakeEmail', 'Network/Email');

class PlsController extends AppController{
 	var $name = "Pls";
	public $helpers = array('Html', 'Session', 'Form', 'Time', 'Js');
	public $uses = array('Pl', 'Foco', 'OqueE', 'OndeEsta', 'NossaPosicao', 'StatusType', 'User', 'LogAtualizacaoPl', 'PlType', 'PlSituacao', 'Relatorio', 'Tema');
	var $scaffold = 'admin';
	// var $transformUrl = array('url_amigavel' => 'numero_da_pl');

	var $paginate = array(
	                        'limit'  => 10,
                            'order' => array(
                                'id' => 'DESC'
                            )
                        );

    //// Nescessário ter o beforeFilter
	function beforeFilter() {
		parent::beforeFilter();


		/// Descomentar verificação abaixo apenas quando utilizar Scaffold
		/*
		if (isset($this->params['prefix']) && $this->params['prefix'] == 'admin') {
			$showThisFields	=	array(
                                    'campo'	  	=> 'Nome do Campo',
                                    ...
                                 );
			$showImage	=	array(
								''
							);

			$this->set('showFields', $showThisFields);
			$this->set('fieldToImg', $showImage);


			$this->set('schemaTable', $this->NomeDaModel->schema());
		}
		*/
	}


    public function admin_add(){
        $model = 'Pl';
		$this->set('model', $model);
        $tipos = $this->PlType->find('list', array(
            'fields' => array(
                'id',
                'tipo'
            ),
            'order' => array(
                'id' => 'DESC'
            )
        ));
        $this->set('tipos', $tipos);
        $situacao = $this->PlSituacao->find('list', array(
            'fields' => array(
                'id',
                'situacao'
            ),
            'order' => array(
                'id' => 'DESC'
            )
        ));
        $this->set('situacao', $situacao);
        $nossaPosicao = $this->StatusType->find('list', array(
            'fields' => array(
                'id',
                'status_name'
            )
        ));
        $this->set('nossaPosicao', $nossaPosicao);

        $result = $this->$model->find('all', array(
            'fields' => array(
                'autor', 'relator'
            )
        ));
        $this->set('registros', $result);

        $temas = $this->Tema->find('list', array(
            'fields' => array(
                'id',
                'tema_name'
            ),
            'order' => array(
                'id' => 'DESC'
            )
        ));
        $this->set('temas', $temas);
        

		/// Verifica se houve post para salvar as informações
		if ($this->request->is('post')){

			/// Seta a model com as informações que vieram do post
			$this->$model->set($this->request->data);

			/// Verifica se a Model está válida.
			/// OBS.: caso estejamos utilizando algum validate da Model, o Cake irá printar o que há de errado no ELSE deste script
			if($this->$model->validates()){
                $this->request->data[$model]['notas_tecnicas'] = 'uploads/arquivos_PLs/'.$this->request->data[$model]['arquivo'];
             

				/// Gravando dados na Model Pai
                $pl_salva = $this->$model->save($this->request->data);
	            if (!empty($pl_salva)){
                    /// Recuperando último ID da Model principal
                    $novo_id = $this->$model->getLastInsertId();

                    /// Array com o nome das outras Models Relacionadas
                    $a_models = array("Foco", "OqueE", "OndeEsta", "NossaPosicao");
                    foreach ($a_models as $model_r) {

                        /// Setando o ID da Model Principal para criar o relacionamento
                        $this->request->data[$model_r]['pl_id'] = $novo_id;
                        /////*********************///////
                        ///====>>> setar campo da imagem aqui
                        /////*********************///////

                        /// Salvando a Model Relacionada com o ID da Principal
                        $this->$model->$model_r->save($this->request->data);
                    }
                }


				// Inserindo um alerta de sucesso na sessão ativa para ser mostrado ao usuário
	            $this->Session->setFlash('PL adicionada com sucesso!');

            	// Redirecionando o usuário para a listagem dos registros
                $this->redirect(array('controller' => 'index', 'action' => 'index', 'admin' => true));

            } else {

				/// Listando os erros que a Model está informando.
				$erros = $this->$model->validationErrors;
				$mensagem_erros = '';
				foreach ($erros as $erro):
					$index_name = key($erro);
					$mensagem_erros .= '&bull; ' . $erro[$index_name] . '</br>';
				endforeach;

				 /// Colocando os erros na sessão ativa para ser mostrado ao usuário
				$this->Session->setFlash($mensagem_erros, 'default', array('class' => 'alert'));

			}
        }
    }

    public function admin_ver_completo($id=null){
        $model = 'Pl';
        $this->set('model', $model);

        $tipos = $this->PlType->find('list', array(
            'fields' => array(
                'id',
                'tipo'
            ),
            'order' => array(
                'id' => 'DESC'
            )
        ));
        $this->set('tipos', $tipos);

        $situacao = $this->PlSituacao->find('list', array(
            'fields' => array(
                'id',
                'situacao'
            ),
            'order' => array(
                'id' => 'DESC'
            )
        ));
        $this->set('situacao', $situacao);

        $temas = $this->Tema->find('list', array(
            'fields' => array(
                'id',
                'tema_name'
            ),
            'order' => array(
                'id' => 'DESC'
            )
        ));
        $this->set('temas', $temas);

        /// Array com o nome das outras Models Relacionadas
        $a_models = array("Pl", "Foco", "OqueE", "OndeEsta", "NossaPosicao");

    	/// Verifica se esse ID existe ou não
		$this->$model->id = $id;
        if (!$this->$model->exists()) {
            throw new NotFoundException(__('Registro inexistente'));
        }


        if ($this->request->is('post') || $this->request->is('put')){

			/// Seta a model com as informações que vieram do post
			$this->$model->set($this->request->data);

			/// Verifica se a Model está válida.
			/// OBS.: caso estejamos utilizando algum validate da Model, o Cake irá printar o que há de errado no ELSE deste script
			if($this->$model->validates()):
                foreach ($a_models as $model_r) {
                    if(!empty($this->request->data[$model_r])):
                        /// Setando o ID da Model Principal para criar o relacionamento
                        $this->request->data[$model_r]['pl_id'] = $id;
                        if(!empty($this->request->data[$model_r]['txt'])){
                            $this->request->data[$model_r]['txt'] = $this->request->data[$model_r]['txt'];
                        }
                        if(!empty($this->request->data[$model_r]['arquivo'])){
                            $this->request->data[$model_r]['arquivo'] = $this->request->data[$model_r]['arquivo'];
                        }
                        $this->request->data[$model_r]['created'] = date("Y-m-d H:i:s");
                        $this->request->data[$model_r]['modified'] = date("Y-m-d H:i:s");

                        /// Salvando a Model Relacionada com o ID da Principal
                        if($model_r == 'Pl'){
                            $this->request->data[$model_r]['tipo_id'] = $this->request->data[$model_r]['tipo_id'];
                            $this->$model_r->save($this->request->data);
                        }else{
                            $this->$model->$model_r->save($this->request->data);
                        }
                    endif;
                }


                // $this->redirect(array('action' => 'ver_completo', 'admin' => true, $id));

            endif;
        }
        $this->request->data = $this->$model->read(null, $id);

    }

    public function admin_ver_completo_edit_block($pl_id=null, $nameModel=null, $id=null, $tipo_id=null){
        $model = $nameModel;
        $this->autoRender = false;
    	/// Verifica se esse ID existe ou não
        if( ($nameModel == 'Foco') || ($nameModel == 'OqueE') || ($nameModel == 'NossaPosicao') ){
		    $this->$model->id = $id;
            $limit = 1;
            // $conditions = array('limit' => 1);
        }else{
            $this->request->data[$model]['pl_id'] = $pl_id;
            $limit = 5;
        }

        if ($this->request->is('post') || $this->request->is('put')){
			/// Seta a model com as informações que vieram do post
			$this->$model->set($this->request->data);

			if($this->$model->validates()):
                if(!empty($this->request->data[$model]['arquivo'])){
                    $this->request->data[$model]['arquivo'] = 'uploads/arquivos_PLs/'.$this->request->data[$model]['arquivo'];
                }
                if($this->$model->save($this->request->data)){
                    // >>> LOG
                    if( ($nameModel == 'Foco') || ($nameModel == 'OqueE') || ($nameModel == 'NossaPosicao') ){
                        $existe_este_log = $this->LogAtualizacaoPl->find('first', array(
                            'conditions' => array(
                                'pl_id' => $pl_id,
                                'nome_da_model' => $nameModel,
                                'model_id'  => $id
                            )
                        ));

                        if(!empty($existe_este_log)){
                            $this->LogAtualizacaoPl->id = $existe_este_log['LogAtualizacaoPl']['id'];
                        }

                        $this->request->data['LogAtualizacaoPl']['pl_id'] = $pl_id;
                        $this->request->data['LogAtualizacaoPl']['usuario_id'] = $this->Session->read('Auth.User.id');
                        $this->request->data['LogAtualizacaoPl']['usuario_nome'] = $this->Session->read('Auth.User.name');
                        $this->request->data['LogAtualizacaoPl']['usuario_username'] = $this->Session->read('Auth.User.username');
                        $this->request->data['LogAtualizacaoPl']['model_id'] = $id;
                        $this->request->data['LogAtualizacaoPl']['tipo_id'] = $tipo_id;
                        $this->request->data['LogAtualizacaoPl']['nome_da_model'] = $nameModel;
                        $this->request->data['LogAtualizacaoPl']['txt'] = $this->request->data[$nameModel]['txt'];

                        $this->LogAtualizacaoPl->save($this->request->data);
                    }else{
                        $this->request->data['LogAtualizacaoPl']['pl_id'] = $pl_id;
                        $this->request->data['LogAtualizacaoPl']['usuario_id'] = $this->Session->read('Auth.User.id');
                        $this->request->data['LogAtualizacaoPl']['usuario_nome'] = $this->Session->read('Auth.User.name');
                        $this->request->data['LogAtualizacaoPl']['usuario_username'] = $this->Session->read('Auth.User.username');
                        $this->request->data['LogAtualizacaoPl']['model_id'] = $this->$model->getLastInsertId();
                        $this->request->data['LogAtualizacaoPl']['tipo_id'] = $tipo_id;
                        $this->request->data['LogAtualizacaoPl']['nome_da_model'] = $nameModel;
                        $this->request->data['LogAtualizacaoPl']['txt'] = $this->request->data[$nameModel]['txt'];
                        if(!empty($this->request->data[$nameModel]['arquivo'])):
                            $this->request->data['LogAtualizacaoPl']['arquivo'] = 'uploads/arquivos_PLs/'.$this->request->data[$nameModel]['arquivo'];
                        endif;

                        $this->LogAtualizacaoPl->save($this->request->data);
                    }
                    // <<< LOG
                    $result = $this->Foco->LogAtualizacaoPl->find('all', array(
                        'conditions' => array(
                            'pl_id' => $pl_id,
                            'LogAtualizacaoPl.nome_da_model' => $model
                        ),
                        'recursive' => 2,
                        'limit' => $limit,
                        'order' => array(
                            'Pl.id' => 'DESC',
                            'LogAtualizacaoPl.id' => 'DESC'
                        ),
                    ));
                    return json_encode($result);
                    die();
                }else{
                    echo false;
                    die();
                }
            endif;
        }
        $this->request->data = $this->$model->read(null, $id);

    }

    public function admin_autocomplete(){
        $model = 'Pl';
        $result = $this->$model->find('all', array(
            'fields' => array(
                $model.'.autor', $model.'.relator'
            )
        ));

        $a_registros['Pl'] = array();
        foreach($result as $registro){
            array_push($a_registros['Pl'], array($registro['Pl']['autor']));
            array_push($a_registros['Pl'], array($registro['Pl']['relator']));
        }

        $uniqueRegistro = array_unique($a_registros);
        echo json_encode($uniqueRegistro);
    }

    public function admin_enviar_atualizacao_pl_por_email($pl_id=null, $nameModel=null, $idLog=null, $nameBlock=null){
        $this->autoRender = false;
        $model = $nameModel;
        $pl = $this->Pl->find('first', array(
            'fields' => array('id', 'numero_da_pl'),
            'conditions' => array(
                'Pl.id' => $pl_id
            )
        ));


        $logAtualizacao = $this->LogAtualizacaoPl->find('first', array(
            'fields' => array('id', 'usuario_nome', 'txt', 'modified'),
            'conditions' => array(
                'LogAtualizacaoPl.id' => $idLog
            )
        ));


        $allUsers = $this->User->find('all', array(
            'fields' => array('id', 'email', 'name'),
            'conditions' => array(
                'User.ativo' => 1,
                'User.email <>' => ''
            )
        ));

        $logoTop = 'http://abear.com.br/uploads/img/logo/header_logo-abear.png';
        $tituloDoEmail = 'Atualização de PL';
        foreach($allUsers as $user){
            $email = $user['User']['email'];
            if($this->validaEmail($email)){
                $nome = $user['User']['name'];
                $PlNumero = $pl['Pl']['numero_da_pl'];
                $PlTxt = $logAtualizacao['LogAtualizacaoPl']['txt'];
                $PlUsuarioQueAlterou = $logAtualizacao['LogAtualizacaoPl']['usuario_nome'];
                $PlAlteradaEm = date('d/m/Y à\s H:i',strtotime($logAtualizacao['LogAtualizacaoPl']['modified']));
                $PlVerCompleto = Router::url('/ver-pl/'.$pl['Pl']['id'], true);

        		$msg = '

                    <table cellpadding="0" cellspacing="0" width="700" align="center" style="color:#747474;font-size: 14px;font-family: Verdana;">
                        <tbody>
                            <tr>
                                <td align="left" width="130">
                                    <img src="'.$logoTop.'">
                                </td>
                                <td colspan="2">
                                    <table style="background-color: #ffd600 !important;" height="115" width="570">
                                        <tbody>
                                            <tr>
                                                <td align="center" style="font-size: 24px;text-transform: uppercase;font-weight: 500;color: #000;">
                                                    <strong>area restrita</strong>
                                                </td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </td>
                            </tr>
                        </tbody>
                    </table>



        			<table cellpadding="0" cellspacing="0" width="700" align="center" style="color:#747474;font-size: 14px;font-family: Verdana;">
        				<tbody>
        					<tr>
        						<td>
                                    <br>
                            		<br>
                            		<br>
                            		<br>
                            		<br>
        							<table cellpadding="0" cellspacing="0" width="600" align="center">
        								<tbody>
        									<tr>
        										<td height="100">
        											<p style="font-size: 18px;color: #000;">
        												Olá <strong>'.$nome.'.</strong>
        											</p>
        											<hr>
        										</td>
        									</tr>
        									<tr>
        										<td align="center">
        											<p style="font-size: 16px;color:#747474">
        												<strong>'.$PlNumero.'</strong> foi alterada.<br>
        											</p>
        										</td>
        									</tr>
        									<tr>
        										<td>
                                                    <p>'.$PlUsuarioQueAlterou.' realizou uma alteração em '.$PlAlteradaEm.'Hs.</p>
        											<p style="font-size: 16px;color:#747474">
        												<strong>'.$nameBlock.'</strong><br><br>
                                                        '.$PlTxt.'
        											</p>
        										</td>
        									</tr>
        									<tr>
        										<td align="center">
        											<br>
        											<p>
        												<a href="'.$PlVerCompleto.'" style="border-style: solid;border-width: 0px;cursor: pointer;font-weight: normal;line-height: normal;margin: 0 0 1.25rem;position: relative;text-decoration: none;text-align: center;display: inline-block;padding-top: 1rem;padding-right: 2rem;padding-bottom: 1.0625rem;padding-left: 2rem;font-size: 1.2rem;background-color: #2E7D32;border-color: #097b61;color: white;-moz-transition: background-color 300ms ease-out;transition: background-color 300ms ease-out;padding-top: 1.0625rem;padding-bottom: 1rem;-webkit-appearance: none;font-weight: normal !important;-moz-border-radius: 10px;-webkit-border-radius: 5px;-moz-border-radius: 5px;border-radius: 5px;">
        													Ver Alteração
        												</a>
        											</p>
        										</td>
        									</tr>
        								</tbody>
        							</table>

        						</td>
        					</tr>
        				</tbody>
        			</table>
        		';
                $this->envio_email($email, $tituloDoEmail, $msg);
            }else{
                print_r('$expression');
                die();
            }
        }
        return true;

    }

    public function envio_email($email_to=null, $title=null, $msg=null) {
    	$this->autoRender = false;


        $Email = new CakeEmail();
		$Email->emailFormat('html');
		$Email->from(array('nao-responda@zoio.net.br' => 'Area Restrita ABEAR'));
		$Email->to($email_to);
		$Email->subject($title);
		$Email->send($msg);
    }

    public function admin_relatorio(){
        $model = 'Relatorio';
        $this->set('model', $model);

           $tipos = $this->PlType->find('list', array(
            'fields' => array(
                'id',
                'tipo'
            ),
            'order' => array(
                'id' => 'DESC'
            )
        ));
        $this->set('tipos', $tipos);

        $situacao = $this->PlSituacao->find('list', array(
            'fields' => array(
                'id',
                'situacao'
            ),
            'order' => array(
                'id' => 'DESC'
            )
        ));
        $this->set('situacao', $situacao);



        $conditions['filtro'] = array();
        $conditionsNew = array();

        if( $this->request->is('post') || $this->request->is('put') ){
            $this->gerarPdf($this->request->data);
        }
    }

    public function gerarPdf($registros=null){
        App::import('Vendor', 'fpdf/PDF');
        // App::import('Vendor', array('file' => 'fpdf/PDF.php'));
        // App::import('Vendor', 'Fpdf', array('file' => 'fpdf/fpdf.php'));
        $this->layout = 'pdf'; //this will use the pdf.ctp layout



        $model = 'Relatorio';

        $conditions['filtro'] = array();
        $conditionsNew = array();

        if( $this->request->is('post') || $this->request->is('put') ){

            // >>> TRATAR MES
            if(!empty($registros[$model]['data_inicio'])){
                $requestDateStartFiter  = $this->format_date($registros[$model]['data_inicio']);
            }
            if(!empty($registros[$model]['data_final'])){
                $requestDateEndFiter  = $this->format_date($registros[$model]['data_final']);
            }
        
            if( !empty($requestDateStartFiter) ){
                $conditionsNew = array( 
                    'LogAtualizacaoPl.modified >= ' => $requestDateStartFiter
                );
                array_push($conditions['filtro'], $conditionsNew);
                $this->request->data[$model]['data_inicio'] = $requestDateStartFiter;
            }
            if(  !empty($requestDateEndFiter) ){
                $conditionsNew = array( 
                    'LogAtualizacaoPl.modified <= ' => $requestDateEndFiter
                );
                array_push($conditions['filtro'], $conditionsNew);
                $this->request->data[$model]['data_final'] = $requestDateEndFiter;
            }


            if( !empty($registros[$model]['tipo_id']) ){
                $conditionsNew = array(
                    'Pl.tipo_id' => $registros[$model]['tipo_id']
                );
                array_push($conditions['filtro'], $conditionsNew);
                $this->request->data[$model]['tipo_id'] = $registros[$model]['tipo_id'];
            }
            if( !empty($registros[$model]['situacao_id']) ){
                $conditionsNew = array(
                    'Pl.situacao_id' => $registros[$model]['situacao_id']
                );
                array_push($conditions['filtro'], $conditionsNew);
                $this->request->data[$model]['situacao_id'] = $registros[$model]['situacao_id'];
            }
            if( !empty($registros[$model]['ano']) ){
                $conditionsNew = array(
                    'Pl.ano' => $registros[$model]['ano']
                );
                array_push($conditions['filtro'], $conditionsNew);
                $this->request->data[$model]['ano'] = $registros[$model]['ano'];
            }
            if( !empty($registros[$model]['autor']) ){
                $conditionsNew = array(
                    'Pl.autor' => $registros[$model]['autor']
                );
                array_push($conditions['filtro'], $conditionsNew);
                $this->request->data[$model]['autor'] = $registros[$model]['autor'];
            }
            if( !empty($registros[$model]['relator']) ){
                $conditionsNew = array(
                    'Pl.relator' => $registros[$model]['relator']
                );
                array_push($conditions['filtro'], $conditionsNew);
                $this->request->data[$model]['relator'] = $registros[$model]['relator'];
            }
            

            $result = $this->LogAtualizacaoPl->find('all', array(
                'conditions' => $conditions['filtro']
            ));
            

            $this->set('pdf', new PDF('P','mm','A4'));
            if(!empty($result)){
                $nameFile = date('Ymd_his').'__'.$this->Session->read('Auth.User.id').'.pdf';
                $this->request->data[$model]['nome_relatorio'] = $nameFile;
                $this->request->data[$model]['url'] = 'uploads/relatorios/'.$nameFile;
                $this->request->data[$model]['usuario_que_gerou'] = $this->Session->read('Auth.User.id');
                $this->request->data[$model]['usuario_name'] = $this->Session->read('Auth.User.name');
                $this->request->data[$model]['usuario_username'] = $this->Session->read('Auth.User.username');

                // >>> SALVAR EM RELATORIOS
                $this->$model->save($this->request->data);
            }
            $this->set('result', $result);
            $this->render('admin_relatorio_gerado');
           
        }
    }

    public function validaEmail($email){
        $conta = "^[a-zA-Z0-9\._-]+@";
        $domino = "[a-zA-Z0-9\._-]+.";
        $extensao = "([a-zA-Z]{2,4})$";
        $pattern = $conta.$domino.$extensao;
        if (ereg($pattern, $email)){
            return true;
        }else{
            return false;
        }
    }

    public function format_date($date=null){
        $date = explode(" ",$date);
        $_texto_para_mes = array(
            'Janeiro' => '01',
            'Fevereiro' => '02',
            'Março' => '03',
            'Abril' => '04',
            'Maio' => '05',
            'Junho' => '06',
            'Julho' => '07',
            'Agosto' => '08',
            'Setembro' => '09',
            'Outubro' => '10',
            'Novembro' => '11' ,
            'Dezembro' => '12'
        );
        
        $texto = substr($date[1], 0, -1);
        if($date[0] < 10){
            $date[0] = '0'.$date[0];
        }
        $formatDateFinal = $date[2].'/'.$_texto_para_mes[$texto].'/'.$date[0];
        // $formatDateFinal = $date[0].'/'.$_texto_para_mes[$texto].'/'.$date[2];

        return $formatDateFinal;
    }
}
